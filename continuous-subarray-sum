class Solution {
public:
    bool checkSubarraySum(vector<int>& nums, int k) {
        int sz = nums.size();
       unordered_map<int, int> mod_map{{0, -1}};

         int sum = 0; //for maintaing sum
          for (int i = 0; i < sz; ++i) {
              sum += nums[i];
              int mod = (k == 0) ? sum : sum % k; //ternary condition
           if (mod_map.find(mod) != mod_map.end()) { //from beg to end
             if (i - mod_map[mod] > 1)  // i - map[mod]
              return true;
         }  else {
             mod_map[mod] = i; //else update the map[mod] by index- i
         }
    }
    return false;

    }
};

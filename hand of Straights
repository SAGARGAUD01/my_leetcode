class Solution {
public:
    bool isNStraightHand(vector<int>& hand, int gs) {
        int sz = hand.size();
    if (sz % gs != 0) {
        return false;
    }
    
     map<int, int> countMap;
    for (int it : hand) {
        countMap[it]++;
    }
    
    //Use a sorted order of unique cards
      vector<int> uniqueCards;
    for (const auto& it : countMap) { //iterating countMap
        uniqueCards.push_back(it.first); //sorting in vec-> unqCards
    }
      sort(uniqueCards.begin(), uniqueCards.end());  //sorting unq cards
    
    // Try to form groups
    for (int it : uniqueCards) {
        if (countMap[it] > 0) {
            int freq = countMap[it];
            for (int i = 0; i < gs; i++) {
                if (countMap[it + i] < freq) {
                    return false;
                }
                countMap[it + i] -= freq;
            }
        }
    }
    
    return true;
    }

};

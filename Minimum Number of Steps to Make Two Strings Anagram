class Solution {
public:
    int minSteps(string s, string t) {
        const auto& count1 = counter(s); //maintaing count of each string s&t
        const auto& count2 = counter(t);

        int res = 0;  //maintaing count

        for (int i = 0; i < count1.size(); ++i) {
            res += max(count1[i] - count2[i],0); //max of anagram->count - t->count
        }
        return res;
    }
    
private: 
    vector<int> counter(const string& s) const {
        vector<int> cnt(26);  //26 alphabates
        for (const auto& c : s) {//traverse the string s/t
            ++cnt[c - 'a']; //ASCII value convertor c-'a'
        }
        return cnt;
    }

};

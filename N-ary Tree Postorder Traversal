/*
// Definition for a Node.
class Node {  //kinda data type
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) { //for the children
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    void hlper(Node* root,vector<int>& res) {

      if(root == nullptr) 
        return;
       for(Node* child: root->children) {
          hlper(child,res); //recall postorder func
       }
          res.push_back(root->val); //final val upd into res
      }

      vector<int> postorder(Node* root) {
             vector<int> res;
             hlper(root,res);
        return res;
      }
    
};

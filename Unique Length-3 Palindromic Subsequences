 int countPalindromicSubsequence(string s) {
            int sz = s.size();

         vector<int> f(26, sz); //vector - first
        vector<int> l(26, -1); //vector - last (26,-1) ,all letters

        for (int i = 0; i < sz; ++i)         {
            f[s[i] - 'a'] = min(f[s[i] - 'a'], i);
            l[s[i] - 'a'] = max(l[s[i] - 'a'], i);
        }
              
        int res = 0;

        for (int i = 0; i < 26; ++i) {
            if (f[i] < l[i]) {
                res += size(unordered_set<char>(cbegin(s) + f[i] + 1, cbegin(s) + l[i]));  
            }
        }
        return res;
    }

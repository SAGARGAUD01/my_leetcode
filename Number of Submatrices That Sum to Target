class Solution {
public:
    int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
        int m = matrix.size(), n=matrix[0].size();  //size of row ,col
        
        for(int row =0;row<m;row++){
            for(int col=1;col<n;col++){
                
                matrix[row][col] += matrix[row][col-1]; //traversing through column
            }
        }
        
        int count=0;
        
         for(int c1=0;c1<n;c1++){
            for(int c2=c1;c2<n;c2++){  // c2 from c1 
                
               unordered_map<int, int> map;
               map[0] = 1; //map at 0 indx is 1;
               int sum = 0;
 
       for (int row = 0; row < m; row++) {
        //update sum with mat[indx][c2] - till c1>0
        sum += matrix[row][c2] - (c1 > 0 ? matrix[row][c1 - 1] : 0);
        count += map[sum - target];  //update count with map[s-t]
        map[sum]++;
        
                  }
            }
        }
        
        return count;
    }
};
